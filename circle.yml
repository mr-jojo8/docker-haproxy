machine:
  services:
    - docker

dependencies:
  override:
    - docker build -t million12/haproxy .

test:
  override:
    #
    # Test interactive mode
    #
    - docker run -ti million12/haproxy -vv
    - docker run -ti million12/haproxy -vv | grep "HA-Proxy version"
    
    #
    # Test daemon mode (default settings)
    #
    - docker run -d -p 8080:80 --name haproxy million12/haproxy && sleep 1
    - curl -u admin:admin http://127.0.0.1:8080/admin?stats
    - docker rm -f haproxy || true
    
    #
    # Test providing custom HAProxy config
    # Test restarting after making changes in that config
    #
    - docker run -d -p 8080:80 -v $(pwd)/container-files/etc/haproxy/haproxy.cfg:/my-haproxy.cfg -e HAPROXY_CONFIG=/my-haproxy.cfg --name haproxy million12/haproxy && sleep 1
    - docker logs -f haproxy > ${CIRCLE_ARTIFACTS}/docker-haproxy.log 2>&1:
        background: true
    # Test if HAProxy uses the provided alternative config
    - grep "HAProxy started with /my-haproxy.cfg config" ${CIRCLE_ARTIFACTS}/docker-haproxy.log
    
    # Make a change and check if HAProxy restarts
    - echo "" >> container-files/etc/haproxy/haproxy.cfg && sleep 1
    - grep "Restarting HAProxy due to config changes" ${CIRCLE_ARTIFACTS}/docker-haproxy.log
    - curl -u admin:admin http://127.0.0.1:8080/admin?stats
    
    # Make invalid entry in config and test restart 
    # and check if we have warning about errors
    - echo "blabla" > container-files/etc/haproxy/haproxy.cfg && sleep 1
    # Mount the mounted .cfg file and check its content - we expect there 'blabla'
    - docker run --volumes-from haproxy --entrypoint sh million12/haproxy -c 'cat /my-haproxy.cfg' | grep 'blabla'
    # Check for HAProxy warnings
    - grep "Fatal errors found in configuration" ${CIRCLE_ARTIFACTS}/docker-haproxy.log
